#!/usr/bin/env node
var X=Object.defineProperty;var O=Object.getOwnPropertySymbols;var D=Object.prototype.hasOwnProperty,M=Object.prototype.propertyIsEnumerable;var k=(e,t,r)=>t in e?X(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,b=(e,t)=>{for(var r in t||(t={}))D.call(t,r)&&k(e,r,t[r]);if(O)for(var r of O(t))M.call(t,r)&&k(e,r,t[r]);return e};var R=(e,t)=>{var r={};for(var n in e)D.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(e!=null&&O)for(var n of O(e))t.indexOf(n)<0&&M.call(e,n)&&(r[n]=e[n]);return r};var g=(e,t,r)=>new Promise((n,i)=>{var s=l=>{try{d(r.next(l))}catch(f){i(f)}},a=l=>{try{d(r.throw(l))}catch(f){i(f)}},d=l=>l.done?n(l.value):Promise.resolve(l.value).then(s,a);d((r=r.apply(e,t)).next())});import{Command as pe}from"commander";import"dotenv/config";import{Command as de}from"commander";import{loadConfig as j}from"c12";import{createConsola as z}from"consola";var T=z({formatOptions:{date:!1,colors:!0,compact:!0},defaults:{tag:"Better Auth"}}),U=e=>({log:(...t)=>{!(e!=null&&e.disabled)&&T.log("",...t)},error:(...t)=>{!(e!=null&&e.disabled)&&T.error("",...t)},warn:(...t)=>{!(e!=null&&e.disabled)&&T.warn("",...t)},info:(...t)=>{!(e!=null&&e.disabled)&&T.info("",...t)},debug:(...t)=>{!(e!=null&&e.disabled)&&T.debug("",...t)},box:(...t)=>{!(e!=null&&e.disabled)&&T.box("",...t)},success:(...t)=>{!(e!=null&&e.disabled)&&T.success("",...t)},break:(...t)=>{!(e!=null&&e.disabled)&&console.log(`
`)}}),c=U();import H from"path";import J from"@babel/preset-typescript";import Q from"@babel/preset-react";var w=["auth.ts","auth.tsx"];w=[...w,...w.map(e=>`lib/${e}`),...w.map(e=>`utils/${e}`)];w=[...w,...w.map(e=>`src/${e}`)];var I={transformOptions:{babel:{presets:[[J,{isTSX:!0,allExtensions:!0}],[Q,{runtime:"automatic"}]]}},extensions:[".ts",".tsx",".js",".jsx"]};function S(r){return g(this,arguments,function*({cwd:e,configPath:t}){var n,i,s,a;try{let d=null;if(t){let{config:l}=yield j({configFile:H.join(e,t),dotenv:!0,jitiOptions:I});!l.auth&&!l.default&&(c.error("[#better-auth]: Couldn't read your auth config. Make sure to default export your auth instance or to export as a variable named auth."),process.exit(1)),d=((n=l.auth)==null?void 0:n.options)||((i=l.default)==null?void 0:i.options)||null}if(!d)for(let l of w)try{let{config:f}=yield j({configFile:l,jitiOptions:I});if(Object.keys(f).length>0){d=((s=f.auth)==null?void 0:s.options)||((a=f.default)==null?void 0:a.options)||null,d||(c.error("[#better-auth]: Couldn't read your auth config."),c.break(),c.info("[#better-auth]: Make sure to default export your auth instance or to export as a variable named auth."),process.exit(1));break}}catch(f){c.error(f),process.exit(1)}return d}catch(d){c.error("Error while reading your auth config.",d),process.exit(1)}})}import{z as C}from"zod";import{existsSync as ue}from"fs";import ce from"path";import Y from"better-sqlite3";import{Kysely as Z}from"kysely";import{MysqlDialect as E,PostgresDialect as $,SqliteDialect as L}from"kysely";import{createPool as _}from"mysql2";import ee from"pg";var{Pool:te}=ee;var re=e=>{var r,n;if(!e.database)return null;if("createDriver"in e.database)return e.database;let t=null;if("provider"in e.database){let i=e.database.provider,s=(n=(r=e.database)==null?void 0:r.url)==null?void 0:n.trim();if(i==="postgres"&&(t=new $({pool:new te({connectionString:s})})),i==="mysql"){let a=new URL(s),d=_({host:a.hostname,user:a.username,password:a.password,database:a.pathname.split("/")[1],port:Number(a.port)});t=new E({pool:d})}if(i==="sqlite"){let a=new Y(s);t=new L({database:a})}}return t},B=e=>{let t=re(e);return t?new Z({dialect:t}):null},K=e=>{if("provider"in e.database)return e.database.provider;if("dialect"in e.database){if(e.database.dialect instanceof $)return"postgres";if(e.database.dialect instanceof E)return"mysql";if(e.database.dialect instanceof L)return"sqlite"}return"sqlite"};import fe from"ora";import q from"chalk";import me from"prompts";var v=e=>{var l,f,u,p,h,m;let t=(l=e.plugins)==null?void 0:l.reduce((o,A)=>{var F;let x=A.schema;if(!x)return o;for(let[N,W]of Object.entries(x))o[N]={fields:b(b({},(F=o[N])==null?void 0:F.fields),W.fields),tableName:N};return o},{}),r=((f=e.rateLimit)==null?void 0:f.storage)==="database",n={rateLimit:{tableName:((u=e.rateLimit)==null?void 0:u.tableName)||"rateLimit",fields:{key:{type:"string"},count:{type:"number"},lastRequest:{type:"number"}}}},y=t||{},{user:i,session:s,account:a}=y,d=R(y,["user","session","account"]);return b(b({user:{tableName:((p=e.user)==null?void 0:p.modelName)||"user",fields:b({name:{type:"string"},email:{type:"string"},emailVerified:{type:"boolean",defaultValue:()=>!1},image:{type:"string",required:!1},createdAt:{type:"date",defaultValue:()=>new Date},updatedAt:{type:"date",defaultValue:()=>new Date}},i==null?void 0:i.fields),order:0},session:{tableName:((h=e.session)==null?void 0:h.modelName)||"session",fields:b({expiresAt:{type:"date"},ipAddress:{type:"string",required:!1},userAgent:{type:"string",required:!1},userId:{type:"string",references:{model:"user",field:"id",onDelete:"cascade"}}},s==null?void 0:s.fields),order:1},account:{tableName:((m=e.account)==null?void 0:m.modelName)||"account",fields:b({accountId:{type:"string"},providerId:{type:"string"},userId:{type:"string",references:{model:"user",field:"id",onDelete:"cascade"}},accessToken:{type:"string",required:!1},refreshToken:{type:"string",required:!1},idToken:{type:"string",required:!1},expiresAt:{type:"date",required:!1},password:{type:"string",required:!1}},a==null?void 0:a.fields),order:2}},d),r?n:{})};function ae(e){var r;return((r=e.plugins)==null?void 0:r.flatMap(n=>Object.keys(n.schema||{}).map(i=>{let a=(n.schema||{})[i];if(!(a!=null&&a.disableMigration))return{tableName:i,fields:a==null?void 0:a.fields}}).filter(i=>i!==void 0)))||[]}function P(e){let t=v(e),r=ae(e);return[t.user,t.session,t.account,...r].reduce((i,s)=>{var a;return i[s.tableName]={fields:b(b({},(a=i[s.tableName])==null?void 0:a.fields),s.fields)},i},{})}var se={string:["character varying","text"],number:["int4","integer","bigint","smallint","numeric","real","double precision"],boolean:["bool","boolean"],date:["timestamp","date"]},ne={string:["varchar","text"],number:["integer","int","bigint","smallint","decimal","float","double"],boolean:["boolean"],date:["date","datetime"]},ie={string:["TEXT"],number:["INTEGER","REAL"],boolean:["INTEGER","BOOLEAN"],date:["DATE","INTEGER"]},oe={postgres:se,mysql:ne,sqlite:ie};function le(e,t,r){return oe[r][t].map(a=>a.toLowerCase()).includes(e.toLowerCase())}function V(e){return g(this,null,function*(){let t=P(e),r=K(e),n=B(e);n||(c.error("Invalid database configuration."),process.exit(1));let i=yield n.introspection.getTables(),s=[],a=[];for(let[u,y]of Object.entries(t)){let p=i.find(m=>m.name===u);if(!p){let m=s.findIndex(x=>x.table===u),o={table:u,fields:y.fields,order:y.order||1/0},A=s.findIndex(x=>(x.order||1/0)>o.order);A===-1?m===-1?s.push(o):s[m].fields=b(b({},s[m].fields),y.fields):s.splice(A,0,o);continue}let h={};for(let[m,o]of Object.entries(y.fields)){let A=p.columns.find(x=>x.name===m);if(!A){h[m]=o;continue}le(A.dataType,o.type,r)||c.warn(`Field ${m} in table ${u} has a different type in the database. Expected ${o.type} but got ${A.dataType}.`)}Object.keys(h).length>0&&a.push({table:u,fields:h,order:y.order||1/0})}let d={string:"text",boolean:"boolean",number:"integer",date:"date"},l=[];if(a.length)for(let u of a)for(let[y,p]of Object.entries(u.fields)){let h=d[p.type],m=n.schema.alterTable(u.table).addColumn(y,h,o=>(o=p.required!==!1?o.notNull():o,p.references&&(o=o.references(`${p.references.model}.${p.references.field}`)),o));l.push(m)}if(s.length)for(let u of s){let y=n.schema.createTable(u.table).addColumn("id","text",p=>p.primaryKey());for(let[p,h]of Object.entries(u.fields)){let m=d[h.type];y=y.addColumn(p,m,o=>(o=h.required!==!1?o.notNull():o,h.references&&(o=o.references(`${h.references.model}.${h.references.field}`)),o))}l.push(y)}function f(){return g(this,null,function*(){for(let u of l)yield u.execute()})}return{toBeCreated:s,toBeAdded:a,runMigrations:f}})}var G=new de("migrate").option("-c, --cwd <cwd>","the working directory. defaults to the current directory.",process.cwd()).option("--config <config>","the path to the configuration file. defaults to the first configuration file found.").option("--y","").action(e=>g(void 0,null,function*(){let t=C.object({cwd:C.string(),config:C.string().optional()}).parse(e),r=ce.resolve(t.cwd);ue(r)||(c.error(`The directory "${r}" does not exist.`),process.exit(1));let n=yield S({cwd:r,configPath:t.config});if(!n){c.error("No configuration file found. Add a `auth.ts` file to your project or pass the path to the configuration file using the `--config` flag.");return}B(n)||(c.error("Invalid database configuration."),process.exit(1));let s=fe("preparing migration...").start(),{toBeAdded:a,toBeCreated:d,runMigrations:l}=yield V(n);!a.length&&!d.length&&(s.stop(),c.success("\u{1F680} No migrations needed."),process.exit(0)),s.stop(),c.info("\u{1F511} The migration will affect the following:");for(let u of[...d,...a])c.info("->",q.magenta(Object.keys(u.fields).join(", ")),q.white("fields on"),q.yellow(`${u.table}`),q.white("table."));let{migrate:f}=yield me({type:"confirm",name:"migrate",message:"Are you sure you want to run these migrations?",initial:!1});f||(c.info("Migration cancelled."),process.exit(0)),s==null||s.start("migrating..."),yield l(),s.stop(),c.success("\u{1F680} migration was completed successfully!"),process.exit(0)}));function be(){return g(this,null,function*(){let e=new pe().name("better-auth");e.addCommand(G),e.parse()})}be();
